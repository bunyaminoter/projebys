@page "/personnel/mystudents/{advisorId:int}"
@model projebys.Pages.Personnel.MyStudentsModel

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Öğrencilerim</title>
    <link rel="stylesheet" href="/css/MyStudents.css">
    <script src="/js/MyStudents.js" defer></script>
</head>
<body>
    <div class="sidebar">
        <div class="logo-container">
            <img src="/img/ktu-logo.png" alt="Logo" class="logo">
        </div>

        <div id="menu">
            <span class="menu-item" onclick="toggleSubMenu('personnelMenu')">Personel İşlemleri</span>
            <div id="personnelMenu" class="sub-menu">
                <span><a href="#" id="updateProfileLink">Profil Güncelle</a></span>
            </div>

            <span class="menu-item" onclick="toggleSubMenu('studentMenu')">Danışman İşlemleri</span>
            <div id="studentMenu" class="sub-menu">
                <span><a href="#" id="myStudentsLink">Öğrencilerim</a></span>
            </div>

            <span class="menu-item" onclick="toggleSubMenu('courseMenu')">Ders İşlemleri</span>
            <div id="courseMenu" class="sub-menu">
                <span><a href="#" id="addCourseLink">Ders Ekle</a></span>
                <span><a href="#" id="updateCourseLink">Ders Güncelle</a></span>
                <span><a href="#" id="listCourseLink">Tüm Dersleri Listele</a></span>
            </div>
        </div>
    </div>

    <div class="students-container">
        <h2>Öğrencilerim</h2>
        <p>Danışmanlık yaptığınız öğrenci listesi:</p>

        <table id="studentsTable">
            <thead>
                <tr>
                    <th>Öğrenci Adı</th>
                    <th>Öğrenci Numarası</th>
                    <th>Bölüm</th>
                    <th>E-posta</th>
                </tr>
            </thead>
            <tbody>
                <!-- Öğrenci bilgileri burada listelenecek -->
            </tbody>
        </table>

        <p id="noStudentsMessage" style="display: none;">Henüz danışmanlık yaptığınız bir öğrenci bulunmamaktadır.</p>
    </div>

    <script>
        function toggleSubMenu(menuId) {
            const menu = document.getElementById(menuId);
            menu.style.display = menu.style.display === 'block' ? 'none' : 'block';
        }

        document.addEventListener('DOMContentLoaded', function () {
            // Danışman bilgilerini yükle
            fetch('/api/Advisors/getAdvisorInfo', {
                method: 'GET',
                headers: { 'Content-Type': 'application/json' }
            })
            .then(response => {
                if (!response.ok) throw new Error("Danışman bilgileri alınamadı.");
                return response.json();
            })
            .then(data => {
                if (data && data.advisorInfo) {
                    const advisorId = data.advisorInfo.advisorID;

                    // Dinamik bağlantıları ayarla
                            document.getElementById('updateProfileLink').href = `/personnel/profile/${advisorId}`;
        document.getElementById('myStudentsLink').href = `/personnel/mystudents/${advisorId}`;
        document.getElementById('addCourseLink').href = `/personnel/courses/add/${advisorId}`;
        document.getElementById('updateCourseLink').href = `/personnel/courses/update/${advisorId}`;
        document.getElementById('listCourseLink').href = `/personnel/courses/list/${advisorId}`;
                    // Öğrenci listesini yükle
                    loadStudents(advisorId);
                } else {
                    alert("Danışman bilgileri eksik.");
                }
            })
            .catch(error => {
                console.error("Hata:", error);
                alert("Kullanıcı bilgileri yüklenirken bir hata oluştu.");
                window.location.href = '/Login/Loginuser';
            });

            function loadStudents(advisorId) {
                fetch(`/api/Advisors/GetMyStudents/${advisorId}`, {
                    method: 'GET',
                    headers: { 'Content-Type': 'application/json' }
                })
                .then(response => response.json())
                .then(data => {
                    const studentsTable = document.getElementById('studentsTable').getElementsByTagName('tbody')[0];
                    const noStudentsMessage = document.getElementById('noStudentsMessage');

                    if (data && data.students && data.students.length > 0) {
                        data.students.forEach(student => {
                            const row = createStudentRow(student);
                            studentsTable.appendChild(row);
                        });
                        noStudentsMessage.style.display = 'none';
                    } else {
                        noStudentsMessage.style.display = 'block';
                    }
                })
                .catch(error => {
                    console.error("Hata:", error);
                    //alert("Öğrenciler yüklenirken bir hata oluştu.");
                });
            }

            function createStudentRow(student) {
                const row = document.createElement('tr');

                const studentName = document.createElement('td');
                studentName.textContent = student.fullName;
                row.appendChild(studentName);

                 const studentID = document.createElement('td'); 
                 studentID.textContent = student.studentID; 
                 row.appendChild(studentID);

                const department = document.createElement('td');
                department.textContent = student.department || 'Bölüm Bilgisi Bulunamadı';
                row.appendChild(department);

                const email = document.createElement('td');
                email.textContent = student.email;
                row.appendChild(email);
                return row;
            }
        });
    </script>
</body>
</html>
